/*
Single Number
Solution
Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,1]
Output: 1
Example 2:

Input: [4,1,2,1,2]
Output: 4
*/

/*
Logic

Concept

If we take XOR of zero and some bit, it will return that bit
a XOR 0 = a

If we take XOR of two same bits, it will return 0
a XOR a = 0

a XOR b XOR a = (a XOR a) XOR b = 0 XOR b = b
So we can XOR all bits together to find the unique number.

*/

class Solution {
    public int singleNumber(int[] nums) {
        
        int unique = 0;
        
        for(int x : nums) {
            unique = unique ^ x;
        }
        
        return unique;
    }
}

// Alternate solution
// Iterate therough array. On first occurrence add the number to list, on second one remove it. The number left becomes the result
